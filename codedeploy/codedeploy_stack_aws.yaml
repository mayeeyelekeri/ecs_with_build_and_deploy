---
AWSTemplateFormatVersion: '2010-09-09'
Description: The template used to create an ECS Service from the ECS Console.
Parameters:
  ECSClusterName:
    Type: String
    Default: mycluster
  ECSServiceName:
    Type: String
    Default: myservice
  SecurityGroupIDs:
    Type: CommaDelimitedList
    Default: sg-01f21bfb0d8873fa9,sg-02b22b3415655ab6e,sg-051a18db22ccdf71d
  SubnetIDs:
    Type: CommaDelimitedList
    Default: subnet-0f4126cef7ff531f4,subnet-06e79ee1a9372fc77
  VpcID:
    Type: String
    Default: vpc-04c870dd9e6861112
  LoadBalancerName:
    Type: String
    Default: albForECS
  ApplicationName:
    Type: String
    Default: AppECS-mycluster-myservice
  DeploymentGroupName:
    Type: String
    Default: DgpECS-mycluster-myservice
Resources:
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: mycluster
      CapacityProviderStrategy:
      - CapacityProvider: FARGATE
        Base: 0
        Weight: 1
      TaskDefinition: arn:aws:ecs:us-east-1:992382552000:task-definition/springdemo:2
      ServiceName: myservice
      SchedulingStrategy: REPLICA
      DesiredCount: 1
      AvailabilityZoneRebalancing: ENABLED
      LoadBalancers:
      - ContainerName: SpringDemo
        ContainerPort: 80
        LoadBalancerName:
          Ref: AWS::NoValue
        TargetGroupArn: arn:aws:elasticloadbalancing:us-east-1:992382552000:targetgroup/my-target-group1/7ca64d88be643c1d
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            Ref: SecurityGroupIDs
          Subnets:
            Ref: SubnetIDs
      PlatformVersion: LATEST
      DeploymentController:
        Type: CODE_DEPLOY
      ServiceConnectConfiguration:
        Enabled: false
      Tags: []
      EnableECSManagedTags: true
  CodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName:
        Ref: ApplicationName
      DeploymentGroupName:
        Ref: DeploymentGroupName
      DeploymentConfigName: CodeDeployDefault.ECSAllAtOnce
      AutoRollbackConfiguration:
        Enabled: true
        Events:
        - DEPLOYMENT_FAILURE
        - DEPLOYMENT_STOP_ON_REQUEST
      BlueGreenDeploymentConfiguration:
        DeploymentReadyOption:
          ActionOnTimeout: CONTINUE_DEPLOYMENT
          WaitTimeInMinutes: 0
        TerminateBlueInstancesOnDeploymentSuccess:
          Action: TERMINATE
          TerminationWaitTimeInMinutes: 60
      DeploymentStyle:
        DeploymentOption: WITH_TRAFFIC_CONTROL
        DeploymentType: BLUE_GREEN
      LoadBalancerInfo:
        TargetGroupPairInfoList:
        - ProdTrafficRoute:
            ListenerArns:
            - arn:aws:elasticloadbalancing:us-east-1:992382552000:listener/app/albForECS/71b393575988d349/f141a42946f0f849
          TargetGroups:
          - Name: my-target-group1
          - Name: my-target-group2
      ServiceRoleArn: arn:aws:iam::992382552000:role/mycodedeployrole
      ECSServices:
      - ClusterName:
          Ref: ECSClusterName
        ServiceName:
          Ref: ECSServiceName
      Tags: []
    DependsOn:
    - CodeDeployApplication
  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName:
        Ref: ApplicationName
      ComputePlatform: ECS
      Tags: []
    DependsOn:
    - ECSService
Outputs:
  ClusterName:
    Description: The cluster used to create the service.
    Value:
      Ref: ECSClusterName
  ECSService:
    Description: The created service.
    Value:
      Ref: ECSService
  CodeDeployDeploymentGroup:
    Description: The created CodeDeploy deployment group.
    Value:
      Ref: CodeDeployDeploymentGroup
  CodeDeployApplication:
    Description: The created CodeDeploy application.
    Value:
      Ref: CodeDeployApplication
