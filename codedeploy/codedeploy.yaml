Description: "Create CodeDeploy project"

Parameters: 
  networkStackName:
    Description: Name of the base stack with all network resources
    Type: String
    Default: nw

  permStackName:
    Description: Name of the base stack with all network resources
    Type: String
    Default: perm

  albStackName:
    Description: Name of the base stack with all network resources
    Type: String
    Default: alb

  autoscaleStackName:
    Description: Name of the base stack with all network resources
    Type: String
    Default: autoscale

  ecs1StackName:
    Description: Name of the base stack with all network resources
    Type: String
    Default: ecs-part1

  ecs2StackName:
    Description: Name of the base stack with all network resources
    Type: String
    Default: ecs-part2

  environment: 
    Type: String 
    Default: dev 
    AllowedValues: 
      - dev
      - prod 

Resources:
    
  codeDeployApplication: 
    Type: AWS::CodeDeploy::Application
    Properties: 
      ApplicationName: 
         !Sub '{{resolve:ssm:/${environment}/codedeploy/application_name}}'
      ComputePlatform: ECS
      Tags:
       - Key: Name
         Value: !Join [" - ", [Fn::Sub: "${AWS::StackName}", "app "] ]
       - Key: Environment
         Value: !Sub ${environment}


  codeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName:
         !Sub '{{resolve:ssm:/${environment}/codedeploy/application_name}}'
      DeploymentGroupName: !Sub '{{resolve:ssm:/${environment}/codedeploy/deploy_group_name}}'
      DeploymentConfigName: CodeDeployDefault.ECSAllAtOnce
      AutoRollbackConfiguration:
        Enabled: true
        Events:
        - DEPLOYMENT_FAILURE
        - DEPLOYMENT_STOP_ON_REQUEST
      BlueGreenDeploymentConfiguration:
        DeploymentReadyOption:
          ActionOnTimeout: CONTINUE_DEPLOYMENT
          WaitTimeInMinutes: 0
        TerminateBlueInstancesOnDeploymentSuccess:
          Action: TERMINATE
          TerminationWaitTimeInMinutes: 60
      DeploymentStyle:
        DeploymentOption: WITH_TRAFFIC_CONTROL
        DeploymentType: BLUE_GREEN
      LoadBalancerInfo:
        TargetGroupPairInfoList:
        - ProdTrafficRoute:
           ListenerArns:
           - Fn::ImportValue: 
               Fn::Sub: "${albStackName}-LISTENER1"
          TargetGroups:
          - Name: !Sub '{{resolve:ssm:/${environment}/alb/target_group_1}}'
          - Name: !Sub '{{resolve:ssm:/${environment}/alb/target_group_2}}'
      ServiceRoleArn: 
          Fn::ImportValue: 
             Fn::Sub: "${ecs1StackName}-CODEDEPLOY-ROLE-ARN"
      ECSServices:
      - ClusterName:
            !Sub '{{resolve:ssm:/${environment}/ecs/cluster_name}}'
        ServiceName:
            !Sub '{{resolve:ssm:/${environment}/ecs/service_name}}'
    DependsOn:
      - codeDeployApplication
    
